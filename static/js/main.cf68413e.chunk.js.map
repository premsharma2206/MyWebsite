{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","console","log","skillname","toLowerCase","concat","Porfolio","portfolio","imgurl","description","Testimonials","testimonials","ContactUs","linkedinId","Footer","imagebaseurl","skypeid","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","Testimonials_Testimonials","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf68413e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}.{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      {console.log(item.skillname.toLowerCase())}\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-thirds\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a href=\"#modal-01\">\n                      <img src={`${item.imgurl}`} className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"imagebaseurl\":\"https://github.com/premsharma2206\",\n    \"name\": \"Prem Sharma\",\n    \"role\": \"Full Stack Developer and Machine learning enthusiast\",\n    \"linkedinId\":\"https://www.linkedin.com/in/prem-sharma-2aa21a190/\",\n    \"skypeid\": \"Your skypeid\",\n    \"roleDescription\": \" I like dabbling in various parts of frontend development and like to learn about new technologies, travel or watch movies in my free time.\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/prem-sharma-2aa21a190/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/premsharma2206\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"skype\",\n          \"url\":\"https://twitter.com/PremSharma0699\",\n          \"className\":\"fa fa-twitter\"\n        }\n      ],\n    \"aboutme\":\"I am currently in the graduating semester of my masters at The University of Texas at Dallas. I am a self taught Full Stack Web Developer, currently diving deeper into Machine Learning. I believe that to be successful in life, one needs to be obsessive with their dreams and keep working towards them.\",\n    \"address\":\"Dallas, Texas\",\n    \"website\":\"https://github.com/premsharma2206\",\n    \"education\":[\n      {\n        \"UniversityName\":\"University of Texas at Dallas\",\n        \"specialization\":\"Computer Science\",\n        \"MonthOfPassing\":\"May\",\n        \"YearOfPassing\":\"2023\",\n        \"Achievements\":\"\"\n      },\n      {\n        \"UniversityName\":\"Vardhaman College of Engineering\",\n        \"specialization\":\"Computer Science and Engineering\",\n        \"MonthOfPassing\":\"July\",\n        \"YearOfPassing\":\"2021\",\n        \"Achievements\":\"\"\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Goldman Sachs\",\n        \"specialization\":\"Summer Analyst\",\n        \"MonthOfLeaving\":\"Aug\",\n        \"YearOfLeaving\":\"2022\",\n        \"Achievements\":\"Designed and implemented a new feature to a microservice of the Fraud Engineering team. Generated dummy data using java to fill the missing values in some fields of the transaction payload. Had to alter the API contract, convert flattened fields to JSON and persist data to MongoDB and S3 in the process.\"\n      },\n      {\n        \"CompanyName\":\"Amazon\",\n        \"specialization\":\"Data Engineer intern\",\n        \"MonthOfLeaving\":\"July\",\n        \"YearOfLeaving\":\"2021\",\n        \"Achievements\":\"Created Amazon product coverage and Mapping Coverage Tableau Reports for the Competitive Monitoring Team by designing an end to end architecture of getting data from upstream teams and transforming the data based on the requirements. Worked on ETL tools, AWS services, Andes in the process. Also, Worked on creating a java based static script to re-run failed AWS Datapipeline Instances.\"\n      }\n    ],\n    \"skillsDescription\":\"Your skills here\",\n    \"skills\":[\n      {\n        \"skillname\":\"Java\"\n      },\n      {\n        \"skillname\":\"Python\"\n      },\n      {\n        \"skillname\":\"Springboot\"\n      },\n      {\n        \"skillname\":\"HTML5\"\n      },\n      {\n        \"skillname\":\"CSS\"\n      },\n      {\n        \"skillname\":\"Reactjs\"\n      },\n      {\n        \"skillname\":\"Nodejs\"\n      },\n      {\n        \"skillname\":\"SQl\"\n      },\n      {\n        \"skillname\":\"AWS\"\n      },\n      {\n        \"skillname\":\"PHP\"\n      },\n      {\n        \"skillname\":\"Bootstrap\"\n      },\n      {\n        \"skillname\":\"Unity\"\n      },\n      {\n        \"skillname\":\"OpenCV\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"AirbnbClone\",\n        \"description\":\"Implemented the functionalities of Airbnb website using MERN stack\",\n        \"imgurl\":\"images/Airbnbclone.png\"\n      },\n      {\n        \"name\":\"Sentimental Analysis on Live Tweets\",\n        \"description\":\"Performed incremental K- means clustering on Twitter data by collecting relevant tweets after every 30 second interval. Displayed the changes in the clusters via a scatter plot which updated in real-time.\",\n        \"imgurl\":\"images/SentimentalAnalysis.png\"\n      },\n      {\n        \"name\":\"The Office VR\",\n        \"description\":\"Created an immersive office environment using Unity\",  \n        \"imgurl\":\"images/Vr.png\"\n      },\n      {\n        \"name\":\"E-Commerce Website\",\n        \"description\":\"Created an e-commerce website from scratch with features like signing up, logging in, adding products to the cart, ordering the products, etc.\",\n        \"imgurl\":\"images/ecommerce.png\"\n      },\n      {\n        \"name\":\"Classification of Fashion - MNIST Dataset\",\n        \"description\":\"An app that can mark student attendance by recognizing their faces. Implemented using Python and OpenCV \",\n        \"imgurl\":\"images/Fashion.png\"\n      },\n      {\n        \"name\":\"Student Attendance using Face Recognition\",\n        \"description\":\"An app that can mark student attendance by recognizing their faces. Implemented using Python and OpenCV \",\n        \"imgurl\":\"images/Facerecognition.png\"\n      },\n      {\n        \"name\":\"Secure Instant Messaging System\",\n        \"description\":\"Designed and Developed a secure instant messaging system using java\",\n        \"imgurl\":\"images/im.jpeg\"\n      }\n    ],\n    \"testimonials\":[\n      {\n        \"description\":\"Prem is a true team player.\",\n        \"name\":\"Rutvik Avaiya\"\n      },\n      {\n        \"description\": \"He is really skilled at node.js and react\",\n        \"name\":\"Jinal Patel\"\n      }\n    ]\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <Testimonials resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}